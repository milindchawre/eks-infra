name: "Terraform EKS prod deploy"

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/eks-setup/**'
      - '!infrastructure/eks-setup/README.md'
  pull_request:
    paths:
      - 'infrastructure/eks-setup/**'
      - '!infrastructure/eks-setup/README.md'

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::995105043624:role/milindchawre_oidc_role
          aws-region: ap-northeast-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive
        working-directory: ./infrastructure/eks-setup

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend/prod/backend.hcl
        working-directory: ./infrastructure/eks-setup
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./infrastructure/eks-setup

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file=environments/production.tfvars -out tfplan
        working-directory: ./infrastructure/eks-setup
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -no-color -var-file=environments/production.tfvars
        working-directory: ./infrastructure/eks-setup